# Generated by Django 5.0.4 on 2024-04-29 17:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog_Category',
            fields=[
                ('cat_id', models.AutoField(primary_key=True, serialize=False)),
                ('cat_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('message', models.CharField(max_length=255, verbose_name='Message')),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Post',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('blog_image', models.ImageField(upload_to='blog_images/')),
                ('blog_image2', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('content', models.TextField()),
                ('content_1', models.TextField()),
                ('content_2', models.TextField()),
                ('conclusion', models.TextField()),
                ('created_on_date', models.DateField(auto_now_add=True)),
                ('created_on_time', models.TimeField(auto_now_add=True)),
                ('author_image', models.ImageField(blank=True, null=True, upload_to='author_images/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(to='Blog.blog_category')),
                ('comments', models.ManyToManyField(blank=True, related_name='blog_posts', to='Blog.comment')),
            ],
        ),
    ]
